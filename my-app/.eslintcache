[{"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\index.js":"1","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\App.js":"3","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\store.js":"4","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Utils\\theme.js":"5","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\CompanyReviews\\reducer.js":"6","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\Search\\reducer.js":"7","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\Register\\reducer.js":"8","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\Login\\reducer.js":"9","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Routes\\Routes.jsx":"10","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\Header\\Header.jsx":"11","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\CompanyReviews\\actionsConstants.js":"12","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\Search\\actionTypes.js":"13","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\Register\\actionTypes.js":"14","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\Login\\actionTypes.js":"15","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\Header\\Modal.js":"16","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Routes\\PrivateRoute.jsx":"17","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\DisplayJobs.jsx":"18","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\Register.jsx":"19","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\Login.jsx":"20","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\Home.jsx":"21","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\CompanyReviews.jsx":"22","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\PostJob.jsx":"23","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\AppliedJobs.jsx":"24","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\SavedJobs.jsx":"25","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\Review.jsx":"26","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\Menu\\UserMenu.jsx":"27","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\Login\\actions.js":"28","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\CompanyReviews\\action.js":"29","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Utils\\timeDifference.js":"30","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\SaveJob\\actions.js":"31","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\JobApply\\actions.js":"32","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\PostJob\\action.js":"33","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\floattext.js":"34","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\Quill.jsx":"35","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\Register\\actions.js":"36","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\Review\\ReviewBox.jsx":"37","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\JobApplyModal\\ApplyModal.jsx":"38","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\Search\\actions.js":"39","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\RecentSearch.jsx":"40","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\Menu\\JobMenu.jsx":"41","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\JobDescription.jsx":"42","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\Companies\\CompanyBox.jsx":"43","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\FilterJobsButton\\FillterButton.jsx":"44","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\SearchForm.jsx":"45","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\JobApply\\actionTypes.js":"46","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\SaveJob\\actionType.js":"47","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Utils\\localStorage.js":"48","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\JobApplyModal\\UploadForm.jsx":"49","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\Section.jsx":"50","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\InputGrid.jsx":"51","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\Input.jsx":"52","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\landingPage.jsx":"53","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\LandingPage.jsx":"54"},{"size":598,"mtime":1654585182891,"results":"55","hashOfConfig":"56"},{"size":411,"mtime":1654511288248,"results":"57","hashOfConfig":"56"},{"size":633,"mtime":1654595895521,"results":"58","hashOfConfig":"56"},{"size":1267,"mtime":1654579126349,"results":"59","hashOfConfig":"56"},{"size":366,"mtime":1654601040570,"results":"60","hashOfConfig":"56"},{"size":1144,"mtime":1654175154775,"results":"61","hashOfConfig":"56"},{"size":1366,"mtime":1654483093885,"results":"62","hashOfConfig":"56"},{"size":720,"mtime":1654483090409,"results":"63","hashOfConfig":"56"},{"size":1183,"mtime":1654588123104,"results":"64","hashOfConfig":"56"},{"size":1848,"mtime":1654602605384,"results":"65","hashOfConfig":"56"},{"size":2945,"mtime":1654674834814,"results":"66","hashOfConfig":"56"},{"size":247,"mtime":1654175154742,"results":"67","hashOfConfig":"56"},{"size":292,"mtime":1654483090394,"results":"68","hashOfConfig":"56"},{"size":154,"mtime":1654483090394,"results":"69","hashOfConfig":"56"},{"size":166,"mtime":1654175154915,"results":"70","hashOfConfig":"56"},{"size":970,"mtime":1654579790247,"results":"71","hashOfConfig":"56"},{"size":459,"mtime":1654585349555,"results":"72","hashOfConfig":"56"},{"size":6400,"mtime":1654606416205,"results":"73","hashOfConfig":"56"},{"size":4764,"mtime":1654667695319,"results":"74","hashOfConfig":"56"},{"size":4288,"mtime":1654667684465,"results":"75","hashOfConfig":"56"},{"size":868,"mtime":1654592439845,"results":"76","hashOfConfig":"56"},{"size":4468,"mtime":1654673467780,"results":"77","hashOfConfig":"56"},{"size":11899,"mtime":1654579881332,"results":"78","hashOfConfig":"56"},{"size":6980,"mtime":1654589535275,"results":"79","hashOfConfig":"56"},{"size":6001,"mtime":1654524944870,"results":"80","hashOfConfig":"56"},{"size":4586,"mtime":1654592988177,"results":"81","hashOfConfig":"56"},{"size":2863,"mtime":1654666943040,"results":"82","hashOfConfig":"56"},{"size":1612,"mtime":1654611632517,"results":"83","hashOfConfig":"56"},{"size":1413,"mtime":1654434881890,"results":"84","hashOfConfig":"56"},{"size":1952,"mtime":1654511639737,"results":"85","hashOfConfig":"56"},{"size":764,"mtime":1654483090394,"results":"86","hashOfConfig":"56"},{"size":762,"mtime":1654435044168,"results":"87","hashOfConfig":"56"},{"size":923,"mtime":1654435174292,"results":"88","hashOfConfig":"56"},{"size":1472,"mtime":1654672787606,"results":"89","hashOfConfig":"56"},{"size":326,"mtime":1654483211115,"results":"90","hashOfConfig":"56"},{"size":1565,"mtime":1654666605285,"results":"91","hashOfConfig":"56"},{"size":1338,"mtime":1654483093882,"results":"92","hashOfConfig":"56"},{"size":2922,"mtime":1654667012862,"results":"93","hashOfConfig":"56"},{"size":2891,"mtime":1654511608673,"results":"94","hashOfConfig":"56"},{"size":7051,"mtime":1654594625417,"results":"95","hashOfConfig":"56"},{"size":4012,"mtime":1654525969822,"results":"96","hashOfConfig":"56"},{"size":3189,"mtime":1654596850158,"results":"97","hashOfConfig":"56"},{"size":1716,"mtime":1654674659792,"results":"98","hashOfConfig":"56"},{"size":1923,"mtime":1654511753575,"results":"99","hashOfConfig":"56"},{"size":3750,"mtime":1654511782144,"results":"100","hashOfConfig":"56"},{"size":160,"mtime":1654483090942,"results":"101","hashOfConfig":"56"},{"size":154,"mtime":1654483090394,"results":"102","hashOfConfig":"56"},{"size":265,"mtime":1654600989286,"results":"103","hashOfConfig":"56"},{"size":688,"mtime":1654589744588,"results":"104","hashOfConfig":"56"},{"size":2230,"mtime":1654594707735,"results":"105","hashOfConfig":"56"},{"size":656,"mtime":1654508625352,"results":"106","hashOfConfig":"56"},{"size":2873,"mtime":1654508706880,"results":"107","hashOfConfig":"56"},{"size":248,"mtime":1654595948596,"results":"108","hashOfConfig":"56"},{"size":3062,"mtime":1654662574553,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},"cb8luh",{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"113"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"113"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"113"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"113"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"113"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"113"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"113"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"113"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"113"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"113"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"113"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"113"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"113"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"113"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"113"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"113"},"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\index.js",["239"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store , persistor} from \"./Redux/store\";\r\n//start\r\nimport {PersistGate} from 'redux-persist/integration/react'\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <PersistGate persistor={persistor}>\r\n      <App />\r\n      </PersistGate>\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n",["240","241"],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\App.js",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\store.js",["242"],"import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\r\nimport { searchReducer } from \"./Search/reducer\";\r\nimport thunk from \"redux-thunk\"\r\nimport { loginReducer } from \"./Login/reducer\";\r\nimport { CompanyReducer } from \"./CompanyReviews/reducer\";\r\nimport { registerReducer } from \"./Register/reducer\";\r\n//do work here\r\nimport {persistStore,persistReducer} from 'redux-persist';\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig={\r\n    key:'persist-key',\r\n    storage\r\n}\r\n\r\n//end\r\n\r\nconst rootReducer = combineReducers({\r\n                                        search:searchReducer,\r\n                                        login:loginReducer,\r\n                                        register:registerReducer,\r\n                                        companies:CompanyReducer\r\n                                    })\r\n//start\r\n\r\nconst persistedReducer = persistReducer(persistConfig , rootReducer);\r\n\r\nexport const store = createStore(persistedReducer,applyMiddleware(thunk))\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport {persistor}\r\n\r\n\r\n// const createComposer  = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n// export const store = createStore(rootReducer,createComposer(applyMiddleware(thunk)))\r\n","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Utils\\theme.js",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\CompanyReviews\\reducer.js",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\Search\\reducer.js",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\Register\\reducer.js",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\Login\\reducer.js",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Routes\\Routes.jsx",["243"],"import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { CompanyReviews } from '../Components/Pages/CompanyReviews';\r\nimport AppliedJobs from '../Components/Pages/AppliedJobs';\r\nimport DisplayJobs from '../Components/Pages/DisplayJobs';\r\nimport Home from '../Components/Pages/Home';\r\nimport { Login } from '../Components/Pages/Login';\r\nimport PostJob from '../Components/Pages/PostJob';\r\nimport { Register } from '../Components/Pages/Register';\r\nimport { Review } from '../Components/Pages/Review';\r\nimport SavedJobs from '../Components/Pages/SavedJobs';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport LandingPage from '../Components/Pages/LandingPage.jsx';\r\n\r\nfunction Routes(props) {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                \r\n                <PrivateRoute exact path=\"/\" Component={Home} />\r\n                <PrivateRoute exact  path=\"/savedJobs\" Component={SavedJobs}/>\r\n                <PrivateRoute exact  path=\"/appliedJobs\" Component={AppliedJobs}/>\r\n                <PrivateRoute  path=\"/jobs\" Component={DisplayJobs}/>\r\n\r\n                {/* landingPage */}\r\n                <Route path='/login'>\r\n                    <LandingPage/>\r\n                </Route>\r\n                \r\n                <Route path='/loginmain'>\r\n                    <Login/>\r\n                </Route>\r\n                <Route path='/Register' exact>\r\n                    <Register />\r\n                </Route>\r\n                {/* <PrivateRoute exact path=\"/\" Component={Home} /> */}\r\n                <PrivateRoute   path=\"/jobs\" Component={DisplayJobs}/>\r\n                <PrivateRoute  path=\"/companies\" Component={CompanyReviews}/>\r\n                <PrivateRoute path = \"/reviews\" exact Component = { Review } />\r\n            </Switch>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Routes;","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\Header\\Header.jsx",["244","245","246","247","248","249"],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\CompanyReviews\\actionsConstants.js",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\Search\\actionTypes.js",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\Register\\actionTypes.js",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\Login\\actionTypes.js",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\Header\\Modal.js",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Routes\\PrivateRoute.jsx",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\DisplayJobs.jsx",["250","251","252","253","254","255","256","257","258","259","260","261","262","263"],"import React, { useEffect, useState,  useReducer } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box, Container, Grid, Typography } from '@mui/material';\r\nimport { useHistory} from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Pagination from '@mui/material/Pagination';\r\n// import classNames from 'classnames'\r\nimport SearchForm from '../Layout/Forms/SearchForm/SearchForm';\r\n// import FillterButton from '../Layout/FilterJobsButton/FillterButton';\r\nimport { getSearchData, fetchSuccess, setCurrentPage } from '../../Redux/Search/actions';\r\nimport JobDescription from '../Layout/JobDescription';\r\n// import styled from 'styled-components' \r\n// import {timeDifference} from '../../Utils/timeDifference'\r\nimport JobMenu from '../Layout/Menu/JobMenu';\r\nimport {makeSaveJobRequest} from '../../Redux/SaveJob/actions';\r\nimport \"./css/displayjob.style.css\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\n\r\n\r\nfunction DisplayJobs(props) {\r\n    \r\n    \r\n    const query = new URLSearchParams(props.location.search)\r\n\r\n\r\n    let job = query.get('q') || \"\"\r\n    let location = query.get('location') || \"\"\r\n    let jt = query.get(\"jt\") || \"\"\r\n    let occu = query.get(\"occupation\") || \"\"\r\n    let edu = query.get(\"education\") || \"\"\r\n   \r\n    \r\n    const [ignored, forceUpdate] =useReducer(x => x + 1, 0)\r\n    \r\n    let jobs = useSelector(state=>state.search.searched)\r\n    let totalCount = useSelector(state=>state.search.totalCount)\r\n    const loggedUser = useSelector(state=>state.login.loggedUser);\r\n    let isLoading = useSelector(state=>state.search.isLoading)\r\n    let p = useSelector(state=>state.search.page)\r\n    \r\n    // const handelReset = ()=>{\r\n    //     dispatch(getSearchData(job,location,page))\r\n    //     forceUpdate()\r\n    // }\r\n    \r\n    const pageNo = query.get('page')\r\n    let [page,setPage] = useState(Number(pageNo))\r\n\r\n\r\n    // let [jobType,setJobType] = useState(jt) \r\n    // let [occupation, setOccupation] = useState(occu)\r\n    // let [education , setEducation] = useState(edu)\r\n    \r\n\r\n\r\n    let [sortDateIsCliked,setSortDateIsCliked] = useState(false)\r\n\r\n\r\n    let [jobData,setJobData] = useState(null)   \r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    \r\n\r\n    const handlePageChange = (event, page) => {\r\n        setPage(page)\r\n        dispatch(setCurrentPage(page))\r\n        history.push(`/jobs?q=${job}&location=${location}&page=${page}`)\r\n    };\r\n\r\n\r\n    useEffect(()=>{\r\n        dispatch(getSearchData(job,location,page))\r\n        forceUpdate()\r\n    },[job,location,page])\r\n\r\n\r\n\r\n    const getJobDescription = (job)=>{    \r\n                setJobData(job)     \r\n    }\r\n    const mystate=useSelector((state)=>state.login.loggedUser);\r\n\r\n\r\n\r\n    const handelSave = ({jobkey,location,companyName,jobTitle})=>{\r\n        const {id,saved_jobs} = loggedUser\r\n        saved_jobs[jobkey] = {\r\n            jobkey,location,companyName,jobTitle,\r\n            dateSaved:new Date().getTime()\r\n        }\r\n        \r\n        dispatch(makeSaveJobRequest({user_id:mystate.user_id,saved_jobs}))\r\n    }\r\n\r\n    const removeFromSaved = ({jobkey})=>{\r\n        const {id,saved_jobs} = loggedUser\r\n        delete saved_jobs[jobkey]\r\n        dispatch(makeSaveJobRequest({user_id:mystate.user_id,saved_jobs}))\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"job_section\">\r\n            <Box style={{transform:\"scale(0.8) translateX(-12%)\"}}>\r\n                <SearchForm />\r\n            </Box>\r\n            {\r\n                isLoading ? (\r\n\r\n                    <Box sx={{ display: 'flex' }}>\r\n                        <CircularProgress />\r\n                    </Box>\r\n                ): jobs.length ? (\r\n                    \r\n                    <>\r\n                <Box>\r\n\r\n          \r\n\r\n            </Box>\r\n            <Box className=\"greyText\">\r\n                jobs in {location}\r\n            </Box>\r\n            {ignored ? null : null}\r\n            <Box className=\"sort_container\">\r\n              \r\n            </Box>\r\n                <Box style={{display:'flex'}} >  \r\n                    <Grid className=\"jobContainer\" classes=\"fhhh\" container>\r\n                        {\r\n                            jobs.map((job,index)=>\r\n                            <Grid className=\"card\"  item key={job.jobkey} lg={12} md={12} sm={12} xs={12} >\r\n                                <Box \r\n                                // onClick={()=>getJobDescription(job)} \r\n                                >\r\n                                    <Typography  className=\"job_title\">\r\n                                        {job.jobTitle}\r\n                                    </Typography>\r\n                                    <Typography className=\"job_subTitle\">\r\n                                        {job.companyName}\r\n                                    </Typography>\r\n                                    <Typography className=\"job_subTitle\">\r\n                                        {job.location}\r\n                                    </Typography>\r\n                                    <Typography className=\"job_subTitle\">\r\n                                    ₹ {Number(job.startSalary).toLocaleString('en-IN')} - ₹ {Number(job.endSalary).toLocaleString('en-IN')}\r\n                                    </Typography>\r\n                                </Box>\r\n                                <JobMenu \r\n                                job={job} \r\n                                handelSave={handelSave}\r\n                                removeFromSaved={removeFromSaved}/>\r\n                            </Grid>)\r\n                        }\r\n                        \r\n                    </Grid>\r\n                    \r\n                    {/* {\r\n                        jobData ? <JobDescription  className=\"chhh\" jobData={jobData} summary={job.snippet} /> : <></> \r\n                    } */}\r\n                   \r\n                    \r\n                </Box>\r\n                \r\n                \r\n                <Pagination onChange={handlePageChange} count={\r\n                    totalCount % 5 === 0 ?\r\n                    Math.floor(totalCount/5) : Math.floor(totalCount/5) + 1 } variant=\"outlined\" page={p} shape=\"rounded\" />\r\n                    </>\r\n                ) : <Box>No results found</Box>\r\n            }\r\n            \r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default DisplayJobs;","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\Register.jsx",["264","265"],"import React, { useState } from 'react';\r\n// import { styled } from '@mui/material/styles';\r\nimport { Container,Grid,OutlinedInput,Typography , Button} from '@mui/material';\r\nimport {  IconButton, Snackbar } from '@mui/material';\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { Box, FormHelperText, FormControlLabel, Checkbox } from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { makeRegisterRequest } from '../../Redux/Register/actions';\r\n\r\n\r\n\r\nconst GreenCheckbox = ((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nexport function Register() {\r\n    const isAuth = useSelector(state=>state.login.isAuth)\r\n\r\n\r\n    const[name,setName] = useState(\"\");\r\n    const[email, setEmail] = useState(\"\");\r\n    const[password, setPassword] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const [snackBarOpen,setSnackBarOpen] = useState(false)\r\n    \r\n    // const {success,isError,errorMsg} = useSelector(state=>state.register)\r\n\r\n    const onNameChange = (e) =>{\r\n        setName(e.target.value);\r\n    }\r\n    \r\n    const onEmailChange = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const onPasswordChange = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(makeRegisterRequest({name,email,password}))\r\n        \r\n    }\r\n\r\n\r\n    return !isAuth ?\r\n    <Container className = \"container\" maxWidth = \"xl\">\r\n        <Box className = \"boxImg\">\r\n\r\n        </Box>\r\n        <Box className = \"boxForm\">\r\n            <Grid container spacing = {3} >\r\n                <Grid item>\r\n                    <Typography className = \"h5\" variant = \"h5\">Create an Account (it's free)</Typography>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <form onSubmit = { handleSubmit }>\r\n                    <FormHelperText className = \"formhelperText\">Name</FormHelperText>\r\n                        <OutlinedInput  className = \"outlinedInput\" onChange = { onNameChange } value = { name } required type = \"text\" variant=\"outlined\"/>\r\n                        <FormHelperText className = \"formhelperText\">Email Address</FormHelperText>\r\n                        <OutlinedInput  className = \"outlinedInput\" onChange = { onEmailChange } value = { email } required type = \"text\" variant=\"outlined\"/>\r\n                        <FormHelperText className = \"formhelperText\">Password</FormHelperText>\r\n                        <OutlinedInput  className = \"outlinedInput\" onChange = { onPasswordChange } value = { password } required type = \"password\" variant=\"outlined\"/>\r\n                        {/* <FormControlLabel className = \"checkbox\"\r\n                            control = {<GreenCheckbox/>}\r\n                            label = \"Keep me signed in on this device.\"\r\n                        /> */}\r\n                        <br/>\r\n                        <Button\r\n                            type = \"submit\"\r\n                            className = \"button\"\r\n                            variant = \"contained\"\r\n                           >\r\n                            Create Account\r\n                        </Button>\r\n                    </form>\r\n                </Grid>\r\n                <hr className = \"pageBreak\"></hr>\r\n            </Grid>\r\n        </Box>\r\n        <Grid container spacing = {3} style = {{ flexDirection : \"column\", alignContent: \"center\", margin: \"20px 0\", color: \"#085ff7\"}}>\r\n            <Grid item>\r\n                <Typography variant = \"body2\" component={Link} to=\"/loginmain\" style = {{cursor: \"pointer\",color: \"#085ff7\"}}>\r\n                    Have an account? Sign in\r\n                </Typography>\r\n            </Grid>\r\n            {/* <Grid item>\r\n                <Typography variant = \"body2\" style = {{cursor: \"pointer\"}}>\r\n                    Forgot Your Password\r\n                </Typography>\r\n            </Grid>\r\n            */}\r\n        </Grid>\r\n       \r\n        <Snackbar\r\n            anchorOrigin={{vertical:'top',horizontal:'left'}}\r\n            open={snackBarOpen}\r\n            autoHideDuration={3000}\r\n            message={<span className=\"format__id\">Regitered Succesfully</span>}\r\n            ContentProps={{\r\n                'aria-describedby':'message-id'\r\n            }}\r\n            onClose={()=>setSnackBarOpen(false)}\r\n            action={[\r\n                <IconButton\r\n                    onClick={()=>{setSnackBarOpen(false)}}\r\n                    color=\"inherit\"\r\n                    key=\"close\"\r\n                    aria-label=\"close\"\r\n                    size=\"large\">\r\n                    <CloseIcon/>\r\n                </IconButton>\r\n            ]} />\r\n    </Container> : <Redirect to=\"/loginmain\" />;\r\n}","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\Login.jsx",["266","267"],"import React, { useState } from 'react';\r\n// import { styled } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport \"./css/login.style.css\"\r\n\r\nimport {\r\n    Box,\r\n    Container,\r\n    Grid,\r\n    OutlinedInput,\r\n    Typography,\r\n    FormHelperText,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Button,\r\n} from '@mui/material';\r\n\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeLoginRequest } from '../../Redux/Login/actions';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n\r\nconst GreenCheckbox = ((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nexport function Login() {\r\n    \r\n    const {isAuth,isLoading} = useSelector(state=>state.login)\r\n\r\n \r\n    const[email, setEmail] = useState(\"\");\r\n    const[password, setPassword] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const onEmailChange = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n    const onPasswordChange = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(makeLoginRequest({email,password}))\r\n    }\r\n\r\n\r\n    return !isAuth ?\r\n    <div className='outerdiv'>\r\n    <Container className = \"container\" maxWidth = \"xl\">\r\n        <Box className = \"boxForm\">\r\n            <Grid container spacing = {3} >\r\n                <Grid item>\r\n                    <Typography className = \"h5\" variant = \"h5\">Sign In</Typography>\r\n                </Grid>\r\n                <Grid item className=\"innerbox\">\r\n                    <form onSubmit = { handleSubmit }>\r\n                        <FormHelperText className = \"formhelperText\">Email Address</FormHelperText>\r\n                        <OutlinedInput  className = \"outlinedInput\" onChange = { onEmailChange } value = { email } required type = \"email\" variant=\"outlined\"/>\r\n                        <FormHelperText className = \"formhelperText\">Password</FormHelperText>\r\n                        <OutlinedInput  className = \"outlinedInput\" onChange = { onPasswordChange } value = { password } required type = \"password\" variant=\"outlined\"/>\r\n                        {/* <FormControlLabel className = \"checkbox\"\r\n                            control = {<GreenCheckbox/>}\r\n                            label = \"Keep me signed in on this device.\"\r\n                        /> */}\r\n                        <br/>\r\n                        <div style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}} >\r\n                        {\r\n                            isLoading?<CircularProgress disableShrink />:<></>\r\n                        }\r\n                        </div>\r\n                        <Button\r\n                            type = \"submit\"\r\n                            className = \"button\"\r\n                            variant = \"contained\"\r\n                            disabled={isLoading}\r\n                            >\r\n                            Sign In\r\n                        </Button>\r\n                        \r\n                    </form>\r\n                </Grid>\r\n                \r\n                <Grid container item spacing = {3}>\r\n                    <Grid item>\r\n                        <Typography style = {{cursor: \"pointer\", color : \"#085ff7\", margin:\"0 115px\"}} variant = \"subtitle2\" component={Link} to=\"/register\">\r\n                            New here ? Create an account ...!!!\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <hr className = \"pageBreak\"></hr>\r\n            </Grid>\r\n        </Box>\r\n        <Grid container spacing = {3} style = {{ flexDirection : \"column\", alignContent: \"center\", margin: \"20px 0\", color: \"#085ff7\"}}>\r\n            <Grid item>\r\n                {/* <Typography variant = \"body2\" style = {{cursor: \"pointer\"}}>\r\n                    Forgot Your Password\r\n                </Typography> */}\r\n            </Grid>\r\n        </Grid>\r\n        <Grid container spacing = {1} style = {{fontSize : \"14px\", backgroundColor: \"white\", padding: \"15px 10px\", margin : \"0 -20px \"}} >\r\n            <Grid item style = {{cursor: \"pointer\"}}>\r\n            © Jayesh Shimpi | Naman Jain | Prachi Sachdeva\r\n            </Grid>\r\n        </Grid>\r\n    </Container>\r\n    </div> : <Redirect to=\"/\" />;\r\n}","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\Home.jsx",["268","269","270"],"import { Container } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SearchForm from '../Layout/Forms/SearchForm/SearchForm';\r\nimport RecentSearch from '../Layout/RecentSearch';\r\nimport \"./css/Home.style.css\"\r\n// import RecentSearch from './../Layout/RecentSearch';\r\n\r\n\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <SearchForm />\r\n            <div className=\"linkContainer\">\r\n                <Link className=\"link\" to=\"/postjob\" >\r\n                    {`Employers Yours next job is - `} \r\n                </Link>\r\n                Your next hire is here\r\n            </div>\r\n            {/* <RecentSearch /> */}\r\n            <h3 style={{marginTop:\"40px\"}}>RecentSearch</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\CompanyReviews.jsx",["271","272","273","274","275","276","277","278","279"],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\PostJob.jsx",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\AppliedJobs.jsx",["280","281","282","283","284"],"import { Box, Button, Container, Typography } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport React, { useReducer, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { timeDifference } from '../../Utils/timeDifference';\r\nimport {makeApplyRequest} from \"../../Redux/JobApply/actions\"\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\n     \r\n        \r\n// const Transition = React.forwardRef(function Transition(props, ref) {\r\n//     return <Slide direction=\"up\" ref={ref} {...props} />;\r\n//   });\r\n\r\nfunction AppliedJobs(props) {\r\n\r\n    const {saved_jobs,applied_job,id} = useSelector(state=>state.login.loggedUser)\r\n    const jobKeys = Object.keys(saved_jobs).reverse()\r\n    const applied = Object.keys(applied_job).reverse()\r\n   \r\n    const [ignored, forceUpdate] =useReducer(x => x + 1, 0)\r\n\r\n    const dispatch = useDispatch();\r\n    // console.log(loggedUser)\r\n    const [open, setOpen] = useState(false)\r\n    const [jobId, setJobId] = useState(\"\")\r\n\r\n  \r\n\r\n    const handleClose=() =>{\r\n        setOpen(false)\r\n        setJobId(\"\")\r\n    }\r\n\r\n    const handleOpen=(id)=>{\r\n        setJobId(id)\r\n        setOpen(true)\r\n    }\r\n\r\n    const mystate=useSelector(state=>state.login.loggedUser);\r\n\r\n  \r\n\r\n    const handleCancel=(key)=>{\r\n        console.log(applied_job)\r\n        delete applied_job[key];\r\n        console.log(applied_job)\r\n        console.log(\"logged user id\"+ mystate.user_id);\r\n        dispatch(makeApplyRequest({user_id:mystate.user_id,saved_jobs,applied_job}))\r\n        setOpen(false)\r\n        forceUpdate()\r\n    }\r\n    \r\n    return (\r\n        <div style={{padding:'100px 10vw',display:'flex'}}>\r\n                <Box>\r\n                    <Typography variant={'h5'} style={{fontSize:'40px',marginBottom:'20px'}}>\r\n                        My Jobs\r\n                    </Typography>\r\n                    <ul style={{display:'flex',marginBottom:'20px'}}>\r\n                        <NavLink to=\"/savedjobs\" activeStyle={{\r\n                            color:\"#0145E3\",\r\n                            textDecoration:'underline'\r\n                        }}\r\n                        style={{\r\n                            fontSize:'25px',\r\n                            marginRight:\"30px\"\r\n                        }}\r\n                        >\r\n                            Saved {jobKeys.length}\r\n                        </NavLink>\r\n                        <NavLink to=\"/appliedjobs\"\r\n                        activeStyle={{\r\n                            color:\"#0145E3\",\r\n                            textDecoration:'underline'\r\n                        }}\r\n                        style={{\r\n                            fontSize:'25px',\r\n                            marginRight:\"30px\"\r\n                        }}\r\n                        \r\n                        >\r\n                            Applied {applied.length}\r\n                        </NavLink>\r\n                    </ul>\r\n\r\n                    <Box>\r\n                        \r\n                            {\r\n                                applied.map((key)=>{\r\n                                    return (\r\n                                        <>\r\n                                        <Box style={{display:'flex'}}   key={key} >\r\n                                        \r\n                                            <Box style={{width:'500px'}}>\r\n                                                <Typography variant='h5' style={{fontSize:'18px',marginBottom:'15px'}}> \r\n                                                    {applied_job[key].jobTitle}\r\n                                                </Typography>\r\n                                                <Box style={{marginBottom:'15px',fontWeight:'600',color:'grey'}}>\r\n                                                {applied_job[key].companyName} | {applied_job[key].location}\r\n                                                </Box>\r\n                                                <Box style={{marginBottom:'30px',fontSize:'14px',fontWeight:'400',color:'grey'}}>\r\n                                                    Applied \r\n                                                    {/* { timeDifference(applied_job[key].dateSaved)} */}\r\n                                                </Box>\r\n                                            </Box>\r\n                                            <Box style={{display:'flex'}}>\r\n                                            <Button className=\"applyButton\" onClick={()=>handleOpen(key)} >\r\n                                                    Cancel {jobId  ? null : null} {ignored ? null : null}\r\n                                            </Button>\r\n\r\n                                            </Box>\r\n                                           \r\n                                    </Box>\r\n                                     <Dialog\r\n                                     open={open}\r\n                                    //  TransitionComponent={Transition}\r\n                                     keepMounted\r\n                                     onClose={handleClose}\r\n                                     aria-labelledby=\"alert-dialog-slide-title\"\r\n                                     aria-describedby=\"alert-dialog-slide-description\"\r\n                                 >\r\n                                     <DialogTitle id=\"alert-dialog-slide-title\">{\"Are you sure you want to cancel the application?\"}</DialogTitle>\r\n                                     <DialogContent>\r\n                                     <DialogContentText id=\"alert-dialog-slide-description\">\r\n                                        \r\n                                     </DialogContentText>\r\n                                     </DialogContent>\r\n                                     <DialogActions>\r\n                                     <Button onClick={()=> handleCancel(key)} color=\"primary\">\r\n                                         Yes\r\n                                     </Button>\r\n                                     <Button onClick={handleClose} color=\"primary\">\r\n                                         No\r\n                                     </Button>\r\n                                     </DialogActions>\r\n                                 </Dialog>\r\n                                 </>\r\n                                    )\r\n                                })\r\n                            }\r\n                        \r\n                            \r\n                    \r\n                    </Box>\r\n                   \r\n                </Box>\r\n           \r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppliedJobs;","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\SavedJobs.jsx",["285","286"],"import { Box, Button, Container, Typography } from '@mui/material';\r\n// import { styled } from '@mui/material/styles';\r\nimport React, { useReducer, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { makeSaveJobRequest } from '../../Redux/SaveJob/actions';\r\n// import { timeDifference } from '../../Utils/timeDifference';\r\nimport {ApplyModal} from \"../Layout/JobApplyModal/ApplyModal\"\r\nimport {makeApplyRequest} from \"../../Redux/JobApply/actions\"\r\n\r\n\r\n\r\nfunction SavedJobs(props) {\r\n\r\n    const {saved_jobs,applied_job,id} = useSelector(state=>state.login.loggedUser);\r\n\r\n    const mystate=useSelector(state=>state.login.loggedUser);\r\n\r\n    const jobKeys = Object.keys(saved_jobs).reverse()\r\n    const applied = Object.keys(applied_job).reverse()\r\n    \r\n    const [ignored, forceUpdate] =useReducer(x => x + 1, 0)\r\n\r\n    const dispatch = useDispatch();\r\n   \r\n    // console.log(loggedUser)\r\n    const [open, setOpen] = useState(false)\r\n    const [jobId, setJobId] = useState(\"\")\r\n\r\n    const removeFromSaved = ({jobkey})=>{\r\n        console.log(mystate.user_id);\r\n\r\n        const user_id=mystate.user_id;\r\n       \r\n        delete saved_jobs[jobkey]\r\n        dispatch(makeSaveJobRequest({user_id,saved_jobs}))\r\n        forceUpdate();\r\n    }\r\n\r\n    const handleClose=() =>{\r\n        setOpen(false)\r\n        setJobId(\"\")\r\n    }\r\n\r\n    const handleOpen=(id)=>{\r\n        setJobId(id)\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleApply=()=>{\r\n        const user_id=mystate.user_id;\r\n        // console.log(jobId)\r\n        applied_job[jobId]={...saved_jobs[jobId],dateSaved:new Date().getTime()}\r\n        delete saved_jobs[jobId]\r\n        dispatch(makeApplyRequest({user_id:user_id,saved_jobs,applied_job}))\r\n        setOpen(false)\r\n        forceUpdate()\r\n    }\r\n    \r\n    return (\r\n        <div style={{padding:'100px 10vw',display:'flex'}}>\r\n                <Box>\r\n                    <Typography variant={'h5'} style={{fontSize:'40px',marginBottom:'20px'}}>\r\n                        My Jobs\r\n                    </Typography>\r\n                    <ul style={{display:'flex',marginBottom:'20px'}}>\r\n                        <NavLink to=\"/savedjobs\" activeStyle={{\r\n                            color:\"#0145E3\",\r\n                            textDecoration:'underline'\r\n                        }}\r\n                        style={{\r\n                            fontSize:'25px',\r\n                            marginRight:\"30px\"\r\n                        }}\r\n                        >\r\n                            Saved {jobKeys.length}\r\n                        </NavLink>\r\n                        <NavLink to=\"/appliedjobs\"\r\n                        style={{\r\n                            fontSize:'25px'\r\n                        }}\r\n                        \r\n                        >\r\n                            Applied {applied.length}\r\n                        </NavLink>\r\n                    </ul>\r\n                        {ignored ? null : null}\r\n                    <Box>\r\n                        \r\n                            {\r\n                                jobKeys.map((key)=>{\r\n                                    return (\r\n                                        <Box style={{display:'flex'}}   key={key} >\r\n                                        \r\n                                            <Box style={{width:'500px'}}>\r\n                                                <Typography variant='h5' style={{fontSize:'18px',marginBottom:'15px'}}> \r\n                                                    {saved_jobs[key].jobTitle}\r\n                                                </Typography>\r\n                                                <Box style={{marginBottom:'15px',fontWeight:'600',color:'grey'}}>\r\n                                                {saved_jobs[key].companyName} | {saved_jobs[key].location}\r\n                                                </Box>\r\n                                                <Box style={{marginBottom:'30px',fontSize:'14px',fontWeight:'400',color:'grey'}}>\r\n                                                    Saved \r\n                                                </Box>\r\n                                            </Box>\r\n                                            <Box style={{display:'flex'}}>\r\n                                            <Button className=\"applyButton\"\r\n                                             onClick={()=>handleOpen(key)} \r\n                                             disabled={applied_job[key]?true:false}>\r\n                                                    {applied_job[key]?\"Already applied\":\"Apply\"}\r\n                                                </Button>\r\n                                            <Button className=\"updateButton\">\r\n                                                    Update\r\n                                            </Button>\r\n                                            </Box>\r\n                                            <Box onClick={()=>{removeFromSaved({jobkey:key})}} style={{cursor:\"pointer\",width:\"40px\",height:'40px',display:'flex',justifyContent:'center',alignItems:'center'}} >\r\n                                                <span>\r\n                                                    X\r\n                                                </span>\r\n                                            </Box>\r\n                                    </Box>\r\n                                    )\r\n                                })\r\n                            }\r\n                        \r\n                            \r\n                    \r\n                    </Box>\r\n                    <ApplyModal \r\n                    open={open}\r\n                    handleClose = {()=>handleClose()}\r\n                    jobId = {jobId}\r\n                    handleApply ={()=>handleApply()}\r\n                    />\r\n                </Box>\r\n           \r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SavedJobs;","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\Review.jsx",["287","288"],"import React, { useEffect, useState } from 'react';\r\n// import { styled } from '@mui/material/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCompanyReviews } from '../../Redux/CompanyReviews/action';\r\nimport axios from \"axios\";\r\nimport { ReviewBox } from \"../Layout/Review/ReviewBox\";\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport { Grid, Container, Typography, Button } from '@mui/material';\r\nimport { Redirect } from 'react-router-dom';\r\n// // import { makeStyles } from '@mui/styles/makeStyles';\r\n// import { makeStyles } from '@material-ui/core';\r\n\r\n\r\nconst imgCont ={\r\n    padding: \"5px\",\r\n    borderRadius: \"5px\",\r\n    boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n\r\n}\r\n\r\nconst optionTab={\r\n       cursor: \"pointer\",\r\n       fontSize:\"x-large\",\r\n        margin: \"0 40px 0 40px\",\r\n        // &:hover: {\r\n        //     borderBottom: \"5px solid #397ff8\",\r\n        //     fontWeight: \"bold\"\r\n        // }\r\n}\r\n\r\n\r\n\r\n\r\nexport function Review(props) {\r\n    // const classes = useStyle();\r\n    const companyDetails = useSelector(state => state.companies.currentCompany);\r\n    const [reviews, setReviews] = useState([]);\r\n\r\n\r\n    const query = new URLSearchParams(props.location.search);\r\n    const id =query.get('id')\r\n    const dispatch = useDispatch()\r\n    const {isAuth} = useSelector(state=>state.login)\r\n    useEffect(()=>{\r\n        dispatch(getCompanyReviews(id));\r\n\r\n        axios.get(`https://indeed-mock-server.herokuapp.com/reviews?company_id=${id}`)\r\n            .then((res) => {\r\n                setReviews(res.data)\r\n                \r\n            })\r\n            .catch((err) => console.log(\"Error getting reviews\" + err))\r\n        \r\n    },[])\r\n\r\n\r\n    return isAuth ? (companyDetails ?\r\n   <Container maxwidth = \"xl\">\r\n       <Grid container style = {{justifyContent:\"space-between\", alignItems: \"center\", marginBottom: \"40px\"}}>\r\n           <Grid container item lg={6} md={7} sm={8}>\r\n               <Grid item className = \"imgCont\" style={imgCont}>\r\n                   <img src={companyDetails.logo} alt={companyDetails.company} width=\"100px\" />\r\n               </Grid>\r\n               <Grid item style = {{paddingTop: \"40px\", paddingLeft: \"20px\"}}>\r\n                   <Typography variant=\"h5\" >{companyDetails.company}</Typography>\r\n                   <Typography variant=\"h5\" >\r\n                       {companyDetails.ratings}\r\n                       <StarIcon style = {{color: \"#9d2b6b\", paddingRight: \"10px\"}}/>\r\n                       <Typography variant=\"caption\" >{reviews.length} reviews</Typography>\r\n                   </Typography>\r\n               </Grid>\r\n           </Grid>\r\n       </Grid>\r\n       <Grid container style = {{height: \"40px\"}}>\r\n\r\n           <Grid item className = \"optionTab\" style={optionTab}>\r\n               About the company\r\n           </Grid>\r\n           <Grid item className = \"optionTab\" style={optionTab} >\r\n               {reviews.length} Reviews\r\n           </Grid>\r\n\r\n       </Grid>\r\n\r\n       <Grid item style = {{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n           <Typography variant = \"h4\"><b>About the company</b></Typography>\r\n       </Grid>\r\n\r\n       {/* ----> below padding change from 40px to  */}\r\n       <Grid container style = {{justifyContent: \"center\", padding: \"10px\"}}>\r\n           <Typography variant = \"body2\" style = {{color: \"#767676\", textAlign: \"left\"}}>\r\n               {companyDetails.description}\r\n           </Typography>\r\n       </Grid>\r\n\r\n\r\n       <Grid item style = {{marginTop: \"30px\", marginBottom: \"50px\"}}>\r\n           <Typography variant = \"h4\"><b>Reviews</b></Typography>\r\n       </Grid>\r\n       <Grid container spacing={10}>\r\n           {\r\n               reviews.map((item) => {\r\n                   return (\r\n                       <ReviewBox \r\n                           key = {item.id}\r\n                           rating = {item.rating}\r\n                           job_position = {item.job_position}\r\n                           date = {item.date}\r\n                           title = {item.title}\r\n                           description = {item.description}\r\n                       />\r\n                   )\r\n               })\r\n           }\r\n       </Grid>\r\n\r\n       <Grid container spacing = {1} style = {{fontSize : \"14px\", backgroundColor: \"white\", padding: \"15px 10px\", margin : \"50px -20px 0\"}} >\r\n           <Grid item style = {{cursor: \"pointer\"}}>\r\n           © Jayesh Shimpi | Namen Jain | Prachi Sachdeva\r\n           </Grid>\r\n       </Grid>\r\n   </Container>\r\n   : <></>) :  <Redirect to=\"/login\" />;\r\n}\r\n","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\Menu\\UserMenu.jsx",["289"],"import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport RateReviewIcon from '@mui/icons-material/RateReview';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport { IconButton, Typography } from '@mui/material';\r\nimport PowerSettingsNewIcon from '@mui/icons-material/PowerSettingsNew';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../../../Redux/Login/actions';\r\n\r\n\r\n\r\nconst StyledMenu = ((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'center',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'center',\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = MenuItem;\r\n\r\nexport default function UserMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const history = useHistory();\r\n  const loggedUser = useSelector(state=>state.login.loggedUser);\r\n  const dispatch = useDispatch()\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        \r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={handleClick}\r\n          size=\"large\">\r\n            <PersonIcon/>\r\n        </IconButton>\r\n  \r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}>\r\n        <Typography variant={'h5'} style={{fontSize:'20px',marginLeft:'15px'}}>\r\n            {loggedUser.name}\r\n        </Typography>\r\n        <StyledMenuItem\r\n          onClick={()=>{\r\n              handleClose()\r\n              history.push('/savedjobs')}}\r\n          >\r\n          <ListItemIcon>\r\n            <FavoriteIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"My Jobs\" />\r\n        </StyledMenuItem>\r\n        <StyledMenuItem>\r\n          <ListItemIcon>\r\n            <RateReviewIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"My Reviews\" />\r\n        </StyledMenuItem>\r\n        <StyledMenuItem onClick={()=>{\r\n              handleClose()\r\n              dispatch(logout())\r\n              }}>\r\n          <ListItemIcon>\r\n            <PowerSettingsNewIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Sign Out\" />\r\n        </StyledMenuItem>\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n}","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\Login\\actions.js",["290"],"import axios from \"axios\";\nimport {\n  LOGIN_FAILURE,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGOUT,\n} from \"./actionTypes\";\nimport { runLogoutTimer, saveTokenInLocalStorage } from \"./reducer\";\n\nconst loginRequest = () => {\n  return {\n    type: LOGIN_REQUEST,\n  };\n};\n\nconst loginSuccess = (currentUser) => {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: currentUser,\n  };\n};\n\nconst loginFailure = (errorMsg) => {\n  return {\n    type: LOGIN_FAILURE,\n    payload: errorMsg,\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem('persist');\n  return {\n    type: LOGOUT,\n  };\n};\n\nexport const makeLoginRequest = ({ email, password }) => (dispatch) => {\n  dispatch(loginRequest())\n\n  const expireIn= 3600;\n\n  axios\n    .get(\"http://localhost:9002/login\")\n    .then((res) => {\n      console.log(res.data.users);\n      // saveTokenInLocalStorage(res.data);\n      runLogoutTimer(dispatch, (expireIn * 1000));\n      dispatch(authenticateUser(email, password, res.data.users));\n    })\n    .catch((err) => dispatch(loginFailure(\"Somthing went wrong\")));\n};\n\nconst authenticateUser = (email, password, usersData ) => (dispatch) => {\n  for (let i = 0; i < usersData.length; i++) {\n    if (usersData[i].email === email && usersData[i].password === password) {\n      dispatch(loginSuccess(usersData[i]));\n      return;\n    } else {\n      if (usersData[i].email === email && usersData[i].password !== password) {\n        alert(\"wrong password\");\n        dispatch(loginFailure(\"Wrong password\"));\n        return;\n      }\n    }\n  }\n\n  alert(\"User Does Not Exist\");\n  dispatch(loginFailure(\"User Does Not Exist\"));\n};\n\n\n","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\CompanyReviews\\action.js",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Utils\\timeDifference.js",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\SaveJob\\actions.js",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\JobApply\\actions.js",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\PostJob\\action.js",[],["291","292"],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\floattext.js",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\Quill.jsx",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\Register\\actions.js",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\Review\\ReviewBox.jsx",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\JobApplyModal\\ApplyModal.jsx",["293","294"],"import React from 'react';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport Modal from '@mui/material/Modal';\r\nimport { Grid, OutlinedInput } from '@mui/material';\r\nimport UploadForm  from './UploadForm';\r\nimport { Button } from '@mui/material';\r\n\r\n\r\n// const PREFIX = 'ApplyModal';\r\n\r\n// const classes = {\r\n//   modal: `${PREFIX}-modal`,\r\n//   paper: `${PREFIX}-paper`,\r\n//   applyForm: `${PREFIX}-applyForm`,\r\n//   label: `${PREFIX}-label`\r\n// };\r\n\r\n// const Root = styled('div')((\r\n//   {\r\n//     theme\r\n//   }\r\n// ) => ({\r\n//   [`& .${classes.modal}`]: {\r\n    // display: 'flex',\r\n    // alignItems: 'center',\r\n    // justifyContent: 'center',\r\n//   },\r\n\r\nconst modal={\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n}\r\n\r\n\r\nconst applyForm={\r\n  boxSizing:'border-box',\r\n  width: \"80%\",\r\n  borderRadius:\"10px\", \r\n  height: \"80vh\", \r\n  backgroundColor: \"white\",\r\n  outline:'none',\r\n  padding:'40px',\r\n\r\n}\r\n\r\n\r\nconst textbox={\r\n  width:\"100%\",\r\n  border:\"1px solid black\"\r\n}\r\n\r\nexport const ApplyModal = ({open,handleClose,jobId,handleApply}) => {\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        position:\"relative\"\r\n      }}\r\n     \r\n    >\r\n      \r\n      <Modal\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\"\r\n        }}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        \r\n        <div className=\"applyForm\" style={applyForm} >\r\n\r\n          <form action=\"\">\r\n            <Grid container style={{width:\"100%\"}}>\r\n              <Grid item>\r\n                <label style={{margin:\"20px 0px\",display:\"block\" }}>\r\n                    Name\r\n                </label>\r\n                <OutlinedInput required style={textbox}/>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n              <Grid item>\r\n                <label style={{margin:\"10px 0px\",display:\"block\"}}>\r\n                    Email\r\n                </label>\r\n                <OutlinedInput required style={textbox} />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n              <Grid item>\r\n                <label style={{margin:\"10px 0px\",display:\"block\"}}>\r\n                    Phone\r\n                </label>\r\n                <OutlinedInput required style={textbox}/>\r\n              </Grid>\r\n            </Grid>\r\n              <UploadForm />\r\n          </form>\r\n          <Button variant='contained' color='primary' style={{marginRight:'20px'}} onClick={handleApply}>Apply</Button>\r\n          <Button variant='outlined' onClick={handleClose}>cancel</Button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\Search\\actions.js",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\RecentSearch.jsx",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\Menu\\JobMenu.jsx",["295"],"import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { IconButton } from '@mui/material';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport NotInterested from '@mui/icons-material/NotInterested';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport { fetchSuccess } from '../../../Redux/Search/actions';\r\n\r\n// const PREFIX = 'JobMenu';\r\n\r\n// const classes = {\r\n//   paper: `${PREFIX}-paper`\r\n// };\r\n\r\n// const Root = styled('div')({\r\n//   [`& .${classes.paper}`]: {\r\n//     border: '1px solid #d3d4d5',\r\n//   },\r\n// });\r\n\r\nconst StyledMenu = ((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'center',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'left',\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\n\r\n\r\nexport default function JobMenu({job,handelSave,removeFromSaved}) {\r\n\r\nconst {jobkey,companyName,location,jobTitle} = job\r\nlet jobs = useSelector(state=>state.search.searched)\r\nconst {saved_jobs} = useSelector(state=>state.login.loggedUser)\r\nconst dispatch = useDispatch()\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const removeFromList = ({jobkey,location,companyName,jobTitle})=>{\r\n    const newJobs = jobs.filter((job)=>job.jobkey !== jobkey)\r\n    dispatch(fetchSuccess(newJobs))\r\n  }\r\n\r\n  return (\r\n    <div style={{position:'absolute',top:\"0\",right:'0'}}>\r\n        \r\n        <IconButton\r\n          aria-label=\"more\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          size=\"large\">\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n     \r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        // classes={{\r\n        //   paper: classes.paper\r\n        // }}\r\n        >\r\n        {\r\n\r\n        saved_jobs[jobkey] ?\r\n          <MenuItem   onClick={()=>{\r\n              handleClose();\r\n              removeFromSaved({jobkey})\r\n          }}>\r\n\r\n            <ListItemIcon style={{display:'flex',justifyContent:'center'}} > \r\n              <FavoriteIcon fontSize=\"small\" />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Saved\" />\r\n          </MenuItem> \r\n        \r\n        :\r\n\r\n          <MenuItem   onClick={()=>{\r\n            handleClose();\r\n            handelSave({jobkey,location,companyName,jobTitle})\r\n        }}>\r\n\r\n          <ListItemIcon style={{display:'flex',justifyContent:'center'}} > \r\n            <FavoriteBorderIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Save Job\" />\r\n        </MenuItem>\r\n        }\r\n\r\n        <MenuItem onClick={()=>{\r\n                handleClose();\r\n                removeFromList({jobkey,location,companyName,jobTitle})\r\n            }}  >\r\n          <ListItemIcon style={{display:'flex',justifyContent:'center'}}>\r\n            <NotInterested fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Not Interseted\" />\r\n        </MenuItem>\r\n        <MenuItem style={{backgroundColor: 'white',color:\"black\"}}>\r\n          <ListItemIcon style={{display:'flex',justifyContent:'center'}}>\r\n            <ErrorIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Is there a problem with the job\" />\r\n        </MenuItem>\r\n      </StyledMenu>\r\n       \r\n    </div>\r\n  );\r\n}","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\JobDescription.jsx",["296","297","298","299","300","301","302","303","304","305","306","307","308"],"import { Box, Typography } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport React , {useReducer,useState} from 'react';\r\nimport { Button } from '@mui/material';\r\nimport  Section  from './Section';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { makeApplyRequest } from '../../Redux/JobApply/actions';\r\nimport { ApplyModal } from './JobApplyModal/ApplyModal';\r\n\r\n\r\n\r\nconst container ={\r\n        position:'sticky',\r\n        top:'20px',\r\n        marginLeft:'20px',\r\n        marginRight:'-40px',\r\n        alignSelf: 'flex-start',\r\n        border:'1px solid black',\r\n        padding:'15px',\r\n        flex:'1',\r\n        borderRadius:'10px ',\r\n        border:'1px solid red'\r\n}\r\n\r\nconst link={\r\n       display:'flex',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        borderRadius:'10px',\r\n        height:'53px',\r\n        padding:'0 25px',\r\n        fontSize:'20px',\r\n        color:'black',\r\n        backgroundColor:\"grey\",\r\n\r\n}\r\n\r\n\r\n\r\nfunction JobDescription({jobData}) {\r\n\r\n    const {companyName,location,snippet,jobTitle,jobDescription,startSalary,endSalary,jobkey} = jobData\r\n    const {saved_jobs,applied_job,id} = useSelector(state=>state.login.loggedUser)\r\n    const [open, setOpen] = useState(false)\r\n    const [jobId, setJobId] = useState(\"\")\r\n    // const [ignored, forceUpdate] =useReducer(x => x + 1, 0);\r\n\r\n    const mystate = useSelector(state=>state.login.loggedUser);\r\n\r\n    const dispatch = useDispatch();\r\n    const handleClose=() =>{\r\n        setOpen(false)\r\n        setJobId(\"\")\r\n    }\r\n\r\n    const handleOpen=(id)=>{\r\n        setJobId(id)\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleApply=()=>{\r\n       \r\n        \r\n        applied_job[jobId] = {\r\n            jobkey,\r\n            location,\r\n            companyName,\r\n            jobTitle,\r\n            dateSaved:new Date()\r\n        }\r\n        dispatch(makeApplyRequest({user_id:mystate.user_id,saved_jobs,applied_job}))\r\n        setOpen(false)\r\n        // forceUpdate()\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container\" style={container}>\r\n            <Typography variant={'h5'} style={{marginBottom:'10px'}}>\r\n                {jobTitle}\r\n            </Typography>\r\n            {/* <Box style={{marginBottom:'10px'}}>\r\n                {companyName},{location}\r\n            </Box> */}\r\n            \r\n            {/* <Box style={{marginBottom:'10px'}}>\r\n                ₹ {Number(startSalary).toLocaleString('en-IN')} - ₹ {Number(endSalary).toLocaleString('en-IN')}\r\n            </Box> */}\r\n            {/* {ignored ? null : null} */}\r\n            {/* <Button className=\"link\" style={link} onClick={()=>handleOpen(jobkey)} disabled={applied_job[jobkey]?true:false} >\r\n                {applied_job[jobkey]?'Applied':'Apply Now'}\r\n            </Button> */}\r\n            {/* <Section jobDescription={jobDescription} summary={snippet} /> */}\r\n            <ApplyModal \r\n                    open={open}\r\n                    handleClose = {()=>handleClose()}\r\n                    jobId = {jobId}\r\n                    handleApply ={()=>handleApply()}\r\n            />\r\n\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JobDescription;","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\Companies\\CompanyBox.jsx",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\FilterJobsButton\\FillterButton.jsx",[],["309","310"],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\SearchForm.jsx",["311","312"],"import {  Box, Button, Grid} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport React, { useState } from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport InputGrid from './InputGrid';\r\nimport { getSearchData, setCurrentPage } from '../../../../Redux/Search/actions';\r\nimport { loadData, saveData } from '../../../../Utils/localStorage';\r\nimport { useHistory } from 'react-router-dom';\r\nimport \"./jobsearchform.style.css\"\r\n\r\n\r\nfunction SearchForm(props) {\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const [job,setJob] = useState('');\r\n    const [location,setLocation] = useState('');\r\n    const jobOptions = ['Java Developer','Javascript Developer','React Developer','Government','Account']\r\n    const locationOptions = ['Bangalore','Mumbai','Delhi','Kolkata','Chennai'];\r\n    const history = useHistory()\r\n    const [error,setError] = useState(false);\r\n    \r\n\r\n    const handleSearch=e=>{\r\n        \r\n        e.preventDefault()\r\n        if(job === \"\" && location === \"\"){\r\n            setError(true)\r\n            return\r\n        }\r\n        dispatch(setCurrentPage(1))\r\n        dispatch(getSearchData(job === \"\"?\"\":job,location=== \"\" ? \"\" : location))\r\n        \r\n        let data = loadData(\"recent\") || []\r\n        let str = job !== \"\" && location !== \"\" ? {category:\"both\" , query: `${job} - ${location}`} : job === \"\" && location !== \"\" ? {category:\"location\", query:`${location}`} : {category:\"job\",query:`${job}`}\r\n\r\n        if(data.length === 4){\r\n            data.reverse()\r\n            if(data.some(item=>item.category===str.category && item.query === str.query)){\r\n                data = data.filter(item=>item.category !== str.category || item.query !== str.query)\r\n                data.push(str)\r\n            }\r\n            else{\r\n                data.shift()\r\n                data.push(str)\r\n            }\r\n            \r\n        }\r\n        else {\r\n            if(data.some(item=>item.category===str.category && item.query===str.query)){\r\n                data = data.filter(item=>item.category !== str.category || item.query !== str.query)\r\n                data.push(str)\r\n            }\r\n            else{\r\n                \r\n                data.push(str)\r\n            }\r\n        }\r\n\r\n        saveData(\"recent\",data.reverse())\r\n        history.push(`/jobs?q=${job}&location=${location}&page=1`)\r\n\r\n        // console.log(str,\"str\")\r\n\r\n    }\r\n\r\n\r\n\r\n    // const handelSubmit = (e)=>{\r\n    //     e.preventDefault();\r\n    //     history.push(`/jobs/q=${job}&l=${location}`)\r\n    // }\r\n    return (\r\n        (<>\r\n            { error ? <Box>Query is Empty</Box> : <></> }\r\n            <form  onSubmit={handleSearch} className=\"searchForm\">\r\n                <Grid container spacing={1}>\r\n                    \r\n                    <InputGrid setValue={setJob} value={job} label={'What?'} \r\n                    helperText={'Job, Job Position'} classes=\"classes\"\r\n                    options={job !== \"\" ?jobOptions:null}\r\n                    setError = {setError}\r\n                    />\r\n\r\n                    <InputGrid setError = {setError} setValue={setLocation} value={location} label={'Where'}\r\n                    helperText='City, state, or pin code' classes=\"classes\"\r\n                    options={locationOptions} />\r\n\r\n                    <Grid item lg={2} md={2} sm={2} xs={12} className=\"btn_Container\">\r\n                        <Button color={'primary'} variant='contained' type='submit'>\r\n                            Find Jobs\r\n                        </Button>\r\n\r\n                        {/* change reset into submit then it will work properly */}\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </>)\r\n    );\r\n}\r\n\r\nexport default SearchForm;","C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\JobApply\\actionTypes.js",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Redux\\SaveJob\\actionType.js",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Utils\\localStorage.js",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\JobApplyModal\\UploadForm.jsx",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\Section.jsx",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\InputGrid.jsx",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\Input.jsx",[],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\landingPage.jsx",[],["313","314"],"C:\\Users\\rudra\\Desktop\\JOB_APP\\project-auth\\my-app\\src\\Components\\Pages\\LandingPage.jsx",["315"],"// import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\nimport * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport BusinessCenterIcon from \"@mui/icons-material/BusinessCenter\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport styles from \"./Header.module.css\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport ForumIcon from \"@mui/icons-material/Forum\";\r\nimport FaceIcon from \"@mui/icons-material/Face\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst LandingPage = () => {\r\n  return (\r\n      <>\r\n      \r\n    \r\n    <div>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar elevation={0} style={{ background: \"white\" }} position=\"static\">\r\n          <Toolbar className={styles.toolbar}>\r\n            <Box className={styles.header_left}>\r\n              <Box className={styles.link}>\r\n                <Typography\r\n                  sx={{ fontWeight: \"bold\" }}\r\n                  className={styles.typography}\r\n                >\r\n                  <Link to=\"/\">\r\n                    <BusinessCenterIcon\r\n                      fontSize=\"large\"\r\n                      style={{ color: \"#127c71\" }}\r\n                    ></BusinessCenterIcon>\r\n                  </Link>\r\n                </Typography>\r\n                <Typography\r\n                  sx={{ fontWeight: \"bold\", fontSize: \"1.2rem\" }}\r\n                  className={styles.typography}\r\n                >\r\n                  Find Jobs\r\n                </Typography>\r\n                <Link style={{textDecoration: 'none'}} to=\"/companyReviews\">\r\n                  <Typography\r\n                    sx={{ fontSize: \"1.2rem\" }}\r\n                    className={styles.typography}\r\n                  >\r\n                    Company Reviews\r\n                  </Typography>\r\n                </Link>\r\n                {/* <Typography\r\n                  sx={{ fontSize: \"1.2rem\" }}\r\n                  className={styles.typography}\r\n                >\r\n                  Filter with Salary\r\n                </Typography> */}\r\n              </Box>\r\n            </Box>\r\n            <Box className={styles.header_right}>\r\n              <ForumIcon\r\n                fontSize=\"large\"\r\n                className={styles.leftIcon}\r\n                style={{ color: \"#127c71\" }}\r\n              />\r\n              {/* <NotificationsIcon\r\n                fontSize=\"large\"\r\n                className={styles.leftIcon}\r\n                style={{ color: \"#127c71\" }}\r\n              /> */}\r\n              <Link to=\"/auth\">\r\n                <FaceIcon\r\n                  fontSize=\"large\"\r\n                  className={styles.leftIcon}\r\n                  style={{ color: \"#127c71\" }}\r\n                />\r\n              </Link>\r\n            </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n    </div>\r\n    <div>landingPage</div>\r\n    <br></br>\r\n    <Link to=\"/loginmain\">Go to the login page</Link>\r\n\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default LandingPage",{"ruleId":"316","severity":1,"message":"317","line":5,"column":8,"nodeType":"318","messageId":"319","endLine":5,"endColumn":23},{"ruleId":"320","replacedBy":"321"},{"ruleId":"322","replacedBy":"323"},{"ruleId":"316","severity":1,"message":"324","line":1,"column":57,"nodeType":"318","messageId":"319","endLine":1,"endColumn":64},{"ruleId":"316","severity":1,"message":"325","line":8,"column":8,"nodeType":"318","messageId":"319","endLine":8,"endColumn":15},{"ruleId":"316","severity":1,"message":"326","line":2,"column":10,"nodeType":"318","messageId":"319","endLine":2,"endColumn":16},{"ruleId":"316","severity":1,"message":"327","line":12,"column":10,"nodeType":"318","messageId":"319","endLine":12,"endColumn":21},{"ruleId":"316","severity":1,"message":"328","line":15,"column":10,"nodeType":"318","messageId":"319","endLine":15,"endColumn":15},{"ruleId":"316","severity":1,"message":"329","line":15,"column":17,"nodeType":"318","messageId":"319","endLine":15,"endColumn":29},{"ruleId":"316","severity":1,"message":"330","line":28,"column":10,"nodeType":"318","messageId":"319","endLine":28,"endColumn":16},{"ruleId":"316","severity":1,"message":"331","line":29,"column":9,"nodeType":"318","messageId":"319","endLine":29,"endColumn":18},{"ruleId":"316","severity":1,"message":"326","line":2,"column":10,"nodeType":"318","messageId":"319","endLine":2,"endColumn":16},{"ruleId":"316","severity":1,"message":"332","line":3,"column":15,"nodeType":"318","messageId":"319","endLine":3,"endColumn":24},{"ruleId":"316","severity":1,"message":"333","line":10,"column":25,"nodeType":"318","messageId":"319","endLine":10,"endColumn":37},{"ruleId":"316","severity":1,"message":"334","line":11,"column":8,"nodeType":"318","messageId":"319","endLine":11,"endColumn":22},{"ruleId":"316","severity":1,"message":"335","line":29,"column":9,"nodeType":"318","messageId":"319","endLine":29,"endColumn":11},{"ruleId":"316","severity":1,"message":"336","line":30,"column":9,"nodeType":"318","messageId":"319","endLine":30,"endColumn":13},{"ruleId":"316","severity":1,"message":"337","line":31,"column":9,"nodeType":"318","messageId":"319","endLine":31,"endColumn":12},{"ruleId":"316","severity":1,"message":"338","line":57,"column":10,"nodeType":"318","messageId":"319","endLine":57,"endColumn":26},{"ruleId":"316","severity":1,"message":"339","line":57,"column":27,"nodeType":"318","messageId":"319","endLine":57,"endColumn":46},{"ruleId":"316","severity":1,"message":"340","line":60,"column":10,"nodeType":"318","messageId":"319","endLine":60,"endColumn":17},{"ruleId":"341","severity":1,"message":"342","line":75,"column":7,"nodeType":"343","endLine":75,"endColumn":26,"suggestions":"344"},{"ruleId":"316","severity":1,"message":"345","line":79,"column":11,"nodeType":"318","messageId":"319","endLine":79,"endColumn":28},{"ruleId":"316","severity":1,"message":"346","line":87,"column":16,"nodeType":"318","messageId":"319","endLine":87,"endColumn":18},{"ruleId":"316","severity":1,"message":"346","line":97,"column":16,"nodeType":"318","messageId":"319","endLine":97,"endColumn":18},{"ruleId":"316","severity":1,"message":"347","line":6,"column":31,"nodeType":"318","messageId":"319","endLine":6,"endColumn":47},{"ruleId":"316","severity":1,"message":"348","line":13,"column":7,"nodeType":"318","messageId":"319","endLine":13,"endColumn":20},{"ruleId":"316","severity":1,"message":"347","line":13,"column":5,"nodeType":"318","messageId":"319","endLine":13,"endColumn":21},{"ruleId":"316","severity":1,"message":"348","line":24,"column":7,"nodeType":"318","messageId":"319","endLine":24,"endColumn":20},{"ruleId":"316","severity":1,"message":"332","line":1,"column":10,"nodeType":"318","messageId":"319","endLine":1,"endColumn":19},{"ruleId":"316","severity":1,"message":"326","line":2,"column":10,"nodeType":"318","messageId":"319","endLine":2,"endColumn":16},{"ruleId":"316","severity":1,"message":"349","line":6,"column":8,"nodeType":"318","messageId":"319","endLine":6,"endColumn":20},{"ruleId":"316","severity":1,"message":"326","line":2,"column":10,"nodeType":"318","messageId":"319","endLine":2,"endColumn":16},{"ruleId":"316","severity":1,"message":"350","line":5,"column":10,"nodeType":"318","messageId":"319","endLine":5,"endColumn":18},{"ruleId":"316","severity":1,"message":"351","line":9,"column":8,"nodeType":"318","messageId":"319","endLine":9,"endColumn":18},{"ruleId":"316","severity":1,"message":"352","line":19,"column":5,"nodeType":"318","messageId":"319","endLine":19,"endColumn":11},{"ruleId":"316","severity":1,"message":"353","line":20,"column":5,"nodeType":"318","messageId":"319","endLine":20,"endColumn":19},{"ruleId":"316","severity":1,"message":"354","line":21,"column":5,"nodeType":"318","messageId":"319","endLine":21,"endColumn":14},{"ruleId":"316","severity":1,"message":"355","line":22,"column":5,"nodeType":"318","messageId":"319","endLine":22,"endColumn":19},{"ruleId":"316","severity":1,"message":"356","line":39,"column":11,"nodeType":"318","messageId":"319","endLine":39,"endColumn":23},{"ruleId":"316","severity":1,"message":"357","line":44,"column":11,"nodeType":"318","messageId":"319","endLine":44,"endColumn":23},{"ruleId":"316","severity":1,"message":"332","line":1,"column":23,"nodeType":"318","messageId":"319","endLine":1,"endColumn":32},{"ruleId":"316","severity":1,"message":"326","line":2,"column":10,"nodeType":"318","messageId":"319","endLine":2,"endColumn":16},{"ruleId":"316","severity":1,"message":"358","line":6,"column":10,"nodeType":"318","messageId":"319","endLine":6,"endColumn":24},{"ruleId":"316","severity":1,"message":"359","line":13,"column":8,"nodeType":"318","messageId":"319","endLine":13,"endColumn":13},{"ruleId":"316","severity":1,"message":"346","line":22,"column":35,"nodeType":"318","messageId":"319","endLine":22,"endColumn":37},{"ruleId":"316","severity":1,"message":"332","line":1,"column":23,"nodeType":"318","messageId":"319","endLine":1,"endColumn":32},{"ruleId":"316","severity":1,"message":"346","line":15,"column":35,"nodeType":"318","messageId":"319","endLine":15,"endColumn":37},{"ruleId":"316","severity":1,"message":"352","line":8,"column":39,"nodeType":"318","messageId":"319","endLine":8,"endColumn":45},{"ruleId":"341","severity":1,"message":"360","line":54,"column":7,"nodeType":"343","endLine":54,"endColumn":9,"suggestions":"361"},{"ruleId":"316","severity":1,"message":"326","line":2,"column":10,"nodeType":"318","messageId":"319","endLine":2,"endColumn":16},{"ruleId":"316","severity":1,"message":"362","line":8,"column":26,"nodeType":"318","messageId":"319","endLine":8,"endColumn":49},{"ruleId":"320","replacedBy":"363"},{"ruleId":"322","replacedBy":"364"},{"ruleId":"316","severity":1,"message":"326","line":3,"column":10,"nodeType":"318","messageId":"319","endLine":3,"endColumn":16},{"ruleId":"316","severity":1,"message":"365","line":30,"column":7,"nodeType":"318","messageId":"319","endLine":30,"endColumn":12},{"ruleId":"316","severity":1,"message":"326","line":2,"column":10,"nodeType":"318","messageId":"319","endLine":2,"endColumn":16},{"ruleId":"316","severity":1,"message":"366","line":1,"column":10,"nodeType":"318","messageId":"319","endLine":1,"endColumn":13},{"ruleId":"316","severity":1,"message":"326","line":2,"column":10,"nodeType":"318","messageId":"319","endLine":2,"endColumn":16},{"ruleId":"316","severity":1,"message":"367","line":3,"column":17,"nodeType":"318","messageId":"319","endLine":3,"endColumn":27},{"ruleId":"316","severity":1,"message":"352","line":4,"column":10,"nodeType":"318","messageId":"319","endLine":4,"endColumn":16},{"ruleId":"316","severity":1,"message":"368","line":5,"column":9,"nodeType":"318","messageId":"319","endLine":5,"endColumn":16},{"ruleId":"369","severity":1,"message":"370","line":22,"column":9,"nodeType":"371","messageId":"372","endLine":22,"endColumn":15},{"ruleId":"316","severity":1,"message":"373","line":25,"column":7,"nodeType":"318","messageId":"319","endLine":25,"endColumn":11},{"ruleId":"316","severity":1,"message":"374","line":42,"column":33,"nodeType":"318","messageId":"319","endLine":42,"endColumn":40},{"ruleId":"316","severity":1,"message":"375","line":42,"column":50,"nodeType":"318","messageId":"319","endLine":42,"endColumn":64},{"ruleId":"316","severity":1,"message":"376","line":42,"column":65,"nodeType":"318","messageId":"319","endLine":42,"endColumn":76},{"ruleId":"316","severity":1,"message":"377","line":42,"column":77,"nodeType":"318","messageId":"319","endLine":42,"endColumn":86},{"ruleId":"316","severity":1,"message":"346","line":43,"column":35,"nodeType":"318","messageId":"319","endLine":43,"endColumn":37},{"ruleId":"316","severity":1,"message":"378","line":56,"column":11,"nodeType":"318","messageId":"319","endLine":56,"endColumn":21},{"ruleId":"320","replacedBy":"379"},{"ruleId":"322","replacedBy":"380"},{"ruleId":"316","severity":1,"message":"326","line":2,"column":10,"nodeType":"318","messageId":"319","endLine":2,"endColumn":16},{"ruleId":"316","severity":1,"message":"327","line":4,"column":22,"nodeType":"318","messageId":"319","endLine":4,"endColumn":33},{"ruleId":"320","replacedBy":"381"},{"ruleId":"322","replacedBy":"382"},{"ruleId":"316","severity":1,"message":"383","line":11,"column":8,"nodeType":"318","messageId":"319","endLine":11,"endColumn":25},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["384"],"no-negated-in-lhs",["385"],"'compose' is defined but never used.","'PostJob' is defined but never used.","'styled' is defined but never used.","'useSelector' is defined but never used.","'Modal' is defined but never used.","'ModalContent' is defined but never used.","'isOpen' is assigned a value but never used.","'showModal' is assigned a value but never used.","'Container' is defined but never used.","'fetchSuccess' is defined but never used.","'JobDescription' is defined but never used.","'jt' is assigned a value but never used.","'occu' is assigned a value but never used.","'edu' is assigned a value but never used.","'sortDateIsCliked' is assigned a value but never used.","'setSortDateIsCliked' is assigned a value but never used.","'jobData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["386"],"'getJobDescription' is assigned a value but never used.","'id' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'GreenCheckbox' is assigned a value but never used.","'RecentSearch' is defined but never used.","'Redirect' is defined but never used.","'SearchIcon' is defined but never used.","'Button' is defined but never used.","'InputAdornment' is defined but never used.","'TextField' is defined but never used.","'FormHelperText' is defined but never used.","'onTextChange' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'timeDifference' is defined but never used.","'Slide' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["387"],"'saveTokenInLocalStorage' is defined but never used.",["384"],["385"],"'modal' is assigned a value but never used.","'Box' is defined but never used.","'useReducer' is defined but never used.","'Section' is defined but never used.","no-dupe-keys","Duplicate key 'border'.","ObjectExpression","unexpected","'link' is assigned a value but never used.","'snippet' is assigned a value but never used.","'jobDescription' is assigned a value but never used.","'startSalary' is assigned a value but never used.","'endSalary' is assigned a value but never used.","'handleOpen' is assigned a value but never used.",["384"],["385"],["384"],["385"],"'NotificationsIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},"Update the dependencies array to be: [dispatch, job, location, page]",{"range":"392","text":"393"},"Update the dependencies array to be: [dispatch, id]",{"range":"394","text":"395"},[2592,2611],"[dispatch, job, location, page]",[1729,1731],"[dispatch, id]"]